<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>pixivCookbook</title>
      <link href="/2019/04/26/pixivCookbook/"/>
      <url>/2019/04/26/pixivCookbook/</url>
      
        <content type="html"><![CDATA[<h1 id="CookBook-Project"><a href="#CookBook-Project" class="headerlink" title="CookBook Project"></a>CookBook Project</h1><a id="more"></a><p><img src="/2019/04/26/pixivCookbook/useCaseDiagram.png" alt="1"></p><p><img src="/2019/04/26/pixivCookbook/classDiagram.png" alt="2"></p>]]></content>
      
      
      
        <tags>
            
            <tag> project </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ds5</title>
      <link href="/2019/04/26/ds5/"/>
      <url>/2019/04/26/ds5/</url>
      
        <content type="html"><![CDATA[<h1 id="4-26笔记"><a href="#4-26笔记" class="headerlink" title="4-26笔记"></a>4-26笔记</h1><a id="more"></a><h2 id="7"><a href="#7" class="headerlink" title="7"></a>7</h2><blockquote><p>fat client</p><ul><li>microsoft excel</li></ul></blockquote><blockquote><p>thin client</p><ul><li>automatioc flight check-in machine </li></ul></blockquote><h2 id="18"><a href="#18" class="headerlink" title="18"></a>18</h2><p>which is on client and which on server</p><h2 id="27"><a href="#27" class="headerlink" title="27"></a>27</h2><p>localhost：在计算机网络中，localhost（意为“本地主机”，指“这台计算机”）是给回路网络接口（loopback）的一个标准主机名，相对应的IP地址为127.0.0.1（IPv4）和[::1]（IPv6）。<br>127.0.0.1是回送地址，指本地机。<br>127.0.0.1是用来检测网络的自己的IP.就是说任何一台电脑来说,不管是否连接到INTERNET上,127.0.0.1对于自己来说都是自己.就是说,每台电脑都是由4位的256进制数组成的.<br>而192.168.1.102现在是本机，但本机也可以设置成其他ip地址，但127.0.0.1一定是指本机。</p><h2 id="JAVA-client-server-简单例子"><a href="#JAVA-client-server-简单例子" class="headerlink" title="JAVA client-server 简单例子"></a>JAVA client-server 简单例子</h2><h3 id="Socketclient-java"><a href="#Socketclient-java" class="headerlink" title="Socketclient.java"></a>Socketclient.java</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintStream;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"><span class="keyword">import</span> java.net.UnknownHostException;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SocketClient</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> <span class="keyword">throws</span> UnknownHostException, IOException </span>&#123;</span><br><span class="line">Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">Socket socket = <span class="keyword">new</span> Socket(<span class="string">"127.0.0.1"</span>, <span class="number">54321</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// get input stream</span></span><br><span class="line">BufferedReader br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(socket.getInputStream()));</span><br><span class="line"></span><br><span class="line"><span class="comment">// get output stream</span></span><br><span class="line">PrintStream ps = <span class="keyword">new</span> PrintStream(socket.getOutputStream());</span><br><span class="line"></span><br><span class="line"><span class="comment">// write string into server</span></span><br><span class="line">ps.println(sc.nextLine());</span><br><span class="line"></span><br><span class="line"><span class="comment">// print the reversed string from server</span></span><br><span class="line">System.out.println(br.readLine());</span><br><span class="line"></span><br><span class="line">socket.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">-</span><br></pre></td></tr></table></figure><h3 id="SocketServer-java"><a href="#SocketServer-java" class="headerlink" title="SocketServer.java"></a>SocketServer.java</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintStream;</span><br><span class="line"><span class="keyword">import</span> java.net.ServerSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SocketServer</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">ServerSocket server = <span class="keyword">new</span> ServerSocket(<span class="number">54321</span>);</span><br><span class="line">System.out.println(<span class="string">"Server is on, binded to 54321 port"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line"><span class="keyword">final</span> Socket socket = server.accept();</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Thread() &#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">// get the input stream</span></span><br><span class="line">BufferedReader br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(socket.getInputStream()));</span><br><span class="line">PrintStream ps = <span class="keyword">new</span> PrintStream(socket.getOutputStream());</span><br><span class="line"></span><br><span class="line">String line = br.readLine();</span><br><span class="line">line = <span class="keyword">new</span> StringBuilder(line).reverse().toString();</span><br><span class="line">ps.println(line);</span><br><span class="line">socket.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;.start();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 学校 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>GRE词组</title>
      <link href="/2019/04/24/GRE%E8%AF%8D%E7%BB%84/"/>
      <url>/2019/04/24/GRE%E8%AF%8D%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<h1 id="GRE-常用词组"><a href="#GRE-常用词组" class="headerlink" title="GRE 常用词组"></a>GRE 常用词组</h1><a id="more"></a><h2 id="Day-1"><a href="#Day-1" class="headerlink" title="Day 1"></a>Day 1</h2><ol><li>stop short of</li><li>jockey for</li><li>per se</li><li><p>silver lining</p><p> Historian George Coulton attributed a silver lining to the Black Death: prosperity engendered by diminished competition for food, shelter, and work led survivors of the epidemic into the Renaissance and subsequent rise of modern Europe.</p></li><li><p>in the grip of</p><p> Our “frailities”-emotions and motives such as rage, fear, greed, gluttony, joy, lust, love-may be a very mixed assortment, but they share at least one immediate quality: we are, as we say, “in the grip of” them.</p></li><li><p>bear out</p><p> The effects of the mechanization of women’s work have not borne out the frequently held assumption that new technology is inherently revolutionary.</p></li><li><p>status quo</p></li><li><p>hinge on</p><p> According to this model, specialist foundings hinge on the interplay between legitimation and competitive forces, both of which are functions of the density(total number) of firms in a particular specialist population.</p></li><li><p>be pitted against</p></li><li><p>be punctuated by</p><p>The semi-final was punctuated by a series of malicious fouls.</p></li><li><p>run for</p></li><li><p>run against</p></li><li><p>depart from</p></li><li><p>set apart</p></li><li><p>prior to</p></li><li><p>have a bearing on</p><p>More generally, however, whether or not a composition establishes a new principle in the history of music has little bearing on its aesthetic worth.</p></li><li><p>take sides</p></li><li><p>stem from</p></li><li><p>in the light of</p><p>In light of this economic depression, a mass layoff is about to happen.</p></li><li><p>compensate for</p><p>To compensate for the substantial decline in the availability of fossil fuels in future years, we will have to provide at least an equivalent alternative energy source.</p></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> GRE </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>补天</title>
      <link href="/2019/04/22/%E8%A1%A5%E5%A4%A9/"/>
      <url>/2019/04/22/%E8%A1%A5%E5%A4%A9/</url>
      
        <content type="html"><![CDATA[<h1 id="JAVA-入门到放弃"><a href="#JAVA-入门到放弃" class="headerlink" title="JAVA 入门到放弃"></a>JAVA 入门到放弃</h1><a id="more"></a><h2 id="Access-modifiers-specifiers-in-java"><a href="#Access-modifiers-specifiers-in-java" class="headerlink" title="Access modifiers(specifiers) in java"></a>Access modifiers(specifiers) in java</h2><hr><h3 id="protected"><a href="#protected" class="headerlink" title="protected"></a>protected</h3><ul><li>基类的 protected 成员是包内可见的，并且对子类可见；</li><li>若子类与基类不在同一包中，那么在子类中，子类实例可以访问其从基类继承而来的protected方法，而不能访问基类实例的protected方法。</li></ul><p><a href="https://blog.csdn.net/justloveyou_/article/details/61672133" target="_blank" rel="noopener">detail</a></p><hr><h3 id="overload"><a href="#overload" class="headerlink" title="overload"></a>overload</h3><p>each overloaded method must take a unique list of the argument types</p><hr><h3 id="override"><a href="#override" class="headerlink" title="override"></a>override</h3><p>（1）重写方法必须和被重写方法具有相同的参数列表（包括顺序及个数还有类型），返回类型必须和被重写方法的返回类型相同或者是返回类型的子类型。</p><p>（2）重写方法的访问控制修饰符不能比被重写方法更严格（比如一个在父类中声明为public的方法重写成一个protected的方法）。</p><p>（3）只有实例方法才能被重写，超类中的static和final方法不能被重写。</p><p>（4）重写方法不能抛出新的检查异常，或者是抛出比被重写方法声明的检查异常更广泛的检查异常。</p><p>（5）注意一种特殊情况：如果超类的方法版本中声明了检查异常，但重写的子类方法中没有声明，这时如果使用多态的方式进行调用，那么编译器认为你调用的是声明了异常的方法。</p><p>（6）尽管多态是在编译时确定对象的类型，但在编译时，还是根据父类的方法声明进行程序检查。因此，如果子类中定义的方法，在父类中没有定义，则会出项编译错误。</p><hr><h3 id="upcast"><a href="#upcast" class="headerlink" title="upcast"></a>upcast</h3><p>the act of converting a subclass reference into a baseclass reference</p><p>缺点：使用向上转型时不能调用子类特有的方法了</p><p>优点：一个父类有多个子类时，一个子类重写了许多父类的方法，可以声明一个public static函数统一对<br>每个属于父类的子类进行操作，节省代码。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Spycsh</span></span><br><span class="line"><span class="comment"> * 2019-04-28</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Car</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> String carDescription = <span class="string">"Car"</span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"父类run方法"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">speed</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"父类speed方法"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getDescription</span><span class="params">()</span> </span>&#123;<span class="keyword">return</span> carDescription;&#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Benz</span> <span class="keyword">extends</span> <span class="title">Car</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"Benz:run方法"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">speed</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"Benz:speed方法"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BMW</span> <span class="keyword">extends</span> <span class="title">Car</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"BMW:run方法"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">speed</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"BMW:speed方法"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Porsche</span> <span class="keyword">extends</span> <span class="title">Car</span></span>&#123;</span><br><span class="line"><span class="keyword">private</span> String carDescription = <span class="string">"Porsche is the best!"</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"Porche:run方法"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">speed</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"Porche:speed方法"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">price</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"Porche:price方法"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getDescription</span><span class="params">()</span> </span>&#123;<span class="keyword">return</span> carDescription;&#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UpcastEX</span> <span class="keyword">extends</span> <span class="title">Car</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> car</span></span><br><span class="line"><span class="comment"> *  !upcast</span></span><br><span class="line"><span class="comment"> *  without upcast you need to define show method for each car brand</span></span><br><span class="line"><span class="comment"> *  save code amount</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">(Car car)</span> </span>&#123;</span><br><span class="line">car.run();</span><br><span class="line">car.speed();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">showAll</span><span class="params">(Car[] e)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span>(Car i:e) &#123;</span><br><span class="line">show(i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Car[] carFleet = &#123;</span><br><span class="line"><span class="keyword">new</span> Benz(),</span><br><span class="line"><span class="keyword">new</span> BMW(),</span><br><span class="line"><span class="keyword">new</span> Porsche()</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">showAll(carFleet);</span><br><span class="line"></span><br><span class="line">Car porsche911 = <span class="keyword">new</span> Porsche();</span><br><span class="line"><span class="comment">//porsche911.price();  // ERROR</span></span><br><span class="line"><span class="comment">// !cannot be implemented because of upcasting!</span></span><br><span class="line"><span class="comment">// baseclass don`t define price()!</span></span><br><span class="line">        </span><br><span class="line">                System.out.println(<span class="string">"test getDescription:"</span>);</span><br><span class="line"><span class="comment">// show that although upcasting, field are accessed</span></span><br><span class="line"><span class="comment">// in subclass, not baseclass.</span></span><br><span class="line">System.out.println(porsche911.getDescription());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>OUTPUT</p></blockquote><p>Benz:run方法</p><p>Benz:speed方法</p><p>BMW:run方法</p><p>BMW:speed方法</p><p>Porche:run方法</p><p>Porche:speed方法</p><p>test getDescription:</p><p>Porsche is the best!</p><hr><h3 id="static"><a href="#static" class="headerlink" title="static"></a>static</h3><p>static修饰方法 静态方法 属于类的方法 即访问它不需要实例对象就能访问</p><hr><h3 id="final"><a href="#final" class="headerlink" title="final"></a>final</h3><h4 id="static-final修饰data"><a href="#static-final修饰data" class="headerlink" title="static, final修饰data"></a>static, final修饰data</h4><blockquote><p>static 强调只有一份，final 说明是一个常量，final定义的基本类型(primitive)的值是不可改变的，但是fianl定义的引用对象的值是可以改变的</p></blockquote><p>只申明final，每次new产生不同的对象<br>static, final一起使用时，只有一块存储地址<br>申明static final，每次new产生相同对象</p><h4 id="final修饰methods"><a href="#final修饰methods" class="headerlink" title="final修饰methods"></a>final修饰methods</h4><blockquote><p>把方法锁定，确保在继承中使用方法行为不变，并且不会被覆盖<br>其二是效率，如果一个方法指明为final，就是同意编译器将针对该方法的所有调用都转为内嵌调用。 转为内嵌调用的目的是节省开销，因为编译器发现一个final方法调用命令时，会跳过程序代码这种正常方式而执行方法调用机制（将参数压入栈，跳至方法代码处并执行，然后跳回并清理栈中的参数，处理返回值），并且以方法体中的实际代码的副本来替代方法调用。但是如果一个方法很大，程序很膨胀，就会看不到内嵌带来的任何性能的提高。</p></blockquote><h4 id="final修饰类"><a href="#final修饰类" class="headerlink" title="final修饰类"></a>final修饰类</h4><blockquote><p>当某个类的整体定义为final时，表明该类不能被继承，方法不能被覆盖，且final类中的所有方法都隐式指定为是final的，方法声明为final后还可以有效地“关闭”动态绑定。</p></blockquote><hr><h3 id="Containers"><a href="#Containers" class="headerlink" title="Containers"></a>Containers</h3><p><img src="/2019/04/22/补天/collections.png" alt="0"></p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>DSP</title>
      <link href="/2019/04/13/DSP/"/>
      <url>/2019/04/13/DSP/</url>
      
        <content type="html"><![CDATA[<h1 id="digital-signal-processing"><a href="#digital-signal-processing" class="headerlink" title="digital signal processing"></a>digital signal processing</h1><a id="more"></a><p><br><br><div class="row">    <embed src="DSP.pdf" width="100%" height="550" type="application/pdf"></div><br><br></p>]]></content>
      
      
      
        <tags>
            
            <tag> 学校 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ds4</title>
      <link href="/2019/04/12/ds4/"/>
      <url>/2019/04/12/ds4/</url>
      
        <content type="html"><![CDATA[<h1 id="2019-04-12-笔记"><a href="#2019-04-12-笔记" class="headerlink" title="2019-04-12 笔记"></a>2019-04-12 笔记</h1><a id="more"></a><p><br><br><div class="row">    <embed src="DistSys4.pdf" width="100%" height="550" type="application/pdf"></div><br><br></p><h1 id="File-IO-operation"><a href="#File-IO-operation" class="headerlink" title="File IO operation"></a>File IO operation</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Spycsh ●int countLines(): count line amount of file ●void print():</span></span><br><span class="line"><span class="comment"> *         print file on command line ●void copy(String filename): copy file</span></span><br><span class="line"><span class="comment"> *         content to the file ‘filename’ ●void delete(): delete the file ●void</span></span><br><span class="line"><span class="comment"> *         printDirectory(): prints the file directory ●List&lt;String&gt;</span></span><br><span class="line"><span class="comment"> *         getOtherFiles(): returns list of other files in same directory as</span></span><br><span class="line"><span class="comment"> *         file Addtionally, create a test class which demonstrates the</span></span><br><span class="line"><span class="comment"> *         functionality of your IOFile class!</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileIo</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> String fileName;</span><br><span class="line"></span><br><span class="line">FileIo(String fileName) &#123;</span><br><span class="line"><span class="keyword">this</span>.fileName = fileName;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">countLines</span><span class="params">()</span> <span class="keyword">throws</span> FileNotFoundException </span>&#123;</span><br><span class="line"><span class="keyword">int</span> lineNum = <span class="number">1</span>;</span><br><span class="line">File file = <span class="keyword">new</span> File(<span class="keyword">this</span>.fileName);</span><br><span class="line">FileReader fr = <span class="keyword">new</span> FileReader(file);</span><br><span class="line"><span class="keyword">char</span>[] a = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">500</span>];</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">fr.read(a);</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">char</span> c : a) &#123;</span><br><span class="line"><span class="keyword">if</span> (c == <span class="string">'\n'</span>)</span><br><span class="line">lineNum += <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> lineNum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">()</span> <span class="keyword">throws</span> FileNotFoundException </span>&#123;</span><br><span class="line">File file = <span class="keyword">new</span> File(<span class="keyword">this</span>.fileName);</span><br><span class="line">FileReader fr = <span class="keyword">new</span> FileReader(file);</span><br><span class="line"><span class="keyword">char</span>[] a = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">500</span>];</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">fr.read(a);</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">char</span> c : a) &#123;</span><br><span class="line">System.out.print(c);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">copy</span><span class="params">(String filename)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"><span class="comment">// create a new destination file with the filename</span></span><br><span class="line">File copyfile = <span class="keyword">new</span> File(filename);</span><br><span class="line">copyfile.createNewFile();</span><br><span class="line">FileWriter fw = <span class="keyword">new</span> FileWriter(copyfile);</span><br><span class="line"><span class="comment">// Read the source file</span></span><br><span class="line">File sourcefile = <span class="keyword">new</span> File(<span class="keyword">this</span>.fileName);</span><br><span class="line">FileReader fr = <span class="keyword">new</span> FileReader(sourcefile);</span><br><span class="line"><span class="keyword">char</span>[] a = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">500</span>];</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">fr.read(a);</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">char</span> c : a) &#123;</span><br><span class="line">fw.write(c);</span><br><span class="line">&#125;</span><br><span class="line">fr.close();</span><br><span class="line">fw.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delete</span><span class="params">()</span> </span>&#123;</span><br><span class="line">File file = <span class="keyword">new</span> File(<span class="keyword">this</span>.fileName);</span><br><span class="line">file.delete();</span><br><span class="line"><span class="keyword">if</span> (file.exists() == <span class="keyword">true</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">"delete fail!"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">System.out.println(<span class="string">"delete success!"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printDirectory</span><span class="params">()</span> </span>&#123;</span><br><span class="line">File file = <span class="keyword">new</span> File(<span class="keyword">this</span>.fileName);</span><br><span class="line">System.out.println(file.getParent());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">List&lt;String&gt; <span class="title">getOtherFiles</span><span class="params">()</span> </span>&#123;</span><br><span class="line">List&lt;String&gt; anotherFile = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line"><span class="comment">// first we should get the directory</span></span><br><span class="line">File file = <span class="keyword">new</span> File(<span class="keyword">this</span>.fileName);</span><br><span class="line">String directoryStr = file.getParent();</span><br><span class="line"></span><br><span class="line">File directory = <span class="keyword">new</span> File(directoryStr);</span><br><span class="line"></span><br><span class="line">String[] allfile = directory.list();</span><br><span class="line"><span class="keyword">for</span> (String f : allfile) &#123;</span><br><span class="line"><span class="comment">// filter given file</span></span><br><span class="line"><span class="comment">// We should use equals rather than ==</span></span><br><span class="line"><span class="comment">// because we just need to filter</span></span><br><span class="line"><span class="comment">// by comparing content</span></span><br><span class="line"><span class="keyword">if</span> (!f.equals(file.getName()))</span><br><span class="line">anotherFile.add(f);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> anotherFile;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 学校 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>SWII3</title>
      <link href="/2019/04/11/SWII3/"/>
      <url>/2019/04/11/SWII3/</url>
      
        <content type="html"><![CDATA[<h1 id="2019-04-09-笔记"><a href="#2019-04-09-笔记" class="headerlink" title="2019-04-09 笔记"></a>2019-04-09 笔记</h1><a id="more"></a><p><br><br><div class="row">    <embed src="SEII3UsabilityEngineeringProject.pdf" width="100%" height="550" type="application/pdf"></div><br><br></p><h1 id="14"><a href="#14" class="headerlink" title="14"></a>14</h1><ul><li>Social acceptability: base on culture and region</li></ul><h1 id="SWING"><a href="#SWING" class="headerlink" title="SWING"></a>SWING</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"><span class="keyword">import</span> javax.swing.event.ChangeEvent;</span><br><span class="line"><span class="keyword">import</span> javax.swing.event.ChangeListener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javafx.scene.control.Button;</span><br><span class="line"><span class="keyword">import</span> javafx.scene.control.CheckBox;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Spycsh</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FruitHodgepodge</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">JFrame f = <span class="keyword">new</span> JFrame();</span><br><span class="line">f.setSize(<span class="number">600</span>, <span class="number">400</span>);</span><br><span class="line">f.setTitle(<span class="string">"FruitOrder"</span>);</span><br><span class="line"></span><br><span class="line">JPanel panel = <span class="keyword">new</span> JPanel();</span><br><span class="line"></span><br><span class="line">Set&lt;String&gt; allFruitList = <span class="keyword">new</span> HashSet&lt;String&gt;(); <span class="comment">// display all fruit choosed</span></span><br><span class="line"></span><br><span class="line">f.getContentPane().setLayout(<span class="keyword">new</span> FlowLayout());</span><br><span class="line"><span class="comment">//f.add("Nor", new Button("Nor"));</span></span><br><span class="line"></span><br><span class="line">LinkedList&lt;String&gt; boxList = <span class="keyword">new</span> LinkedList&lt;String&gt;();</span><br><span class="line">Collections.addAll(boxList, <span class="string">"apple banana kiwi orange melon grape"</span>.split(<span class="string">" "</span>));</span><br><span class="line"></span><br><span class="line">JCheckBox[] cbs = <span class="keyword">new</span> JCheckBox[boxList.size()];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; boxList.size(); i++) &#123;</span><br><span class="line">JCheckBox cb = cbs[i] = <span class="keyword">new</span> JCheckBox(boxList.get(i));</span><br><span class="line"></span><br><span class="line">cb.addChangeListener(<span class="keyword">new</span> ChangeListener() &#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">stateChanged</span><span class="params">(ChangeEvent e)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// get the event source( checkbox itself)</span></span><br><span class="line">JCheckBox checkBox = (JCheckBox) e.getSource();</span><br><span class="line">System.out.println(checkBox.getText() + <span class="string">" 是否选中: "</span> + checkBox.isSelected());</span><br><span class="line"><span class="keyword">if</span> (checkBox.isSelected())</span><br><span class="line">allFruitList.add(checkBox.getText());</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">allFruitList.remove(checkBox.getText());</span><br><span class="line">System.out.println(allFruitList);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">panel.add(cb);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">JButton btn = <span class="keyword">new</span> JButton();</span><br><span class="line">btn.setText(<span class="string">"Display the order!"</span>);</span><br><span class="line">btn.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">JOptionPane testOpt = <span class="keyword">new</span> JOptionPane();</span><br><span class="line">testOpt.showMessageDialog(<span class="keyword">new</span> JFrame(), <span class="string">"Your oder:"</span> + <span class="string">"\n"</span> + allFruitList);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">panel.add(btn);</span><br><span class="line"></span><br><span class="line">f.setContentPane(panel); <span class="comment">//</span></span><br><span class="line">f.setVisible(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="JAVAFX"><a href="#JAVAFX" class="headerlink" title="JAVAFX"></a>JAVAFX</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> application;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Spycsh</span></span><br><span class="line"><span class="comment"> * Main window: user can choose from 6 different fruits</span></span><br><span class="line"><span class="comment"> * After confirming the choice of fruits another window will pop up and tell the user the choice of fruits</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javafx.application.Application;</span><br><span class="line"><span class="keyword">import</span> javafx.stage.Stage;</span><br><span class="line"><span class="keyword">import</span> javafx.scene.Scene;</span><br><span class="line"><span class="keyword">import</span> javafx.scene.layout.BorderPane;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javafx.scene.Group;</span><br><span class="line"><span class="keyword">import</span> javafx.scene.control.CheckBox;</span><br><span class="line"><span class="keyword">import</span> javafx.beans.value.ChangeListener;</span><br><span class="line"><span class="keyword">import</span> javafx.beans.value.ObservableValue;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javafx.scene.layout.GridPane;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javafx.scene.control.Button;</span><br><span class="line"><span class="keyword">import</span> javafx.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> javafx.event.EventHandler;</span><br><span class="line"><span class="keyword">import</span> javafx.scene.text.Text;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.regex.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FruitHodgepodge</span> <span class="keyword">extends</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">start</span><span class="params">(Stage primaryStage)</span> </span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">BorderPane root = <span class="keyword">new</span> BorderPane();</span><br><span class="line"></span><br><span class="line">GridPane gp = <span class="keyword">new</span> GridPane();</span><br><span class="line">Scene scene = <span class="keyword">new</span> Scene(gp, <span class="number">500</span>, <span class="number">300</span>);</span><br><span class="line"></span><br><span class="line">LinkedList&lt;String&gt; boxList = <span class="keyword">new</span> LinkedList&lt;String&gt;();</span><br><span class="line">Collections.addAll(boxList, <span class="string">"apple banana kiwi orange melon grape"</span>.split(<span class="string">" "</span>));</span><br><span class="line"></span><br><span class="line">CheckBox[] cbs = <span class="keyword">new</span> CheckBox[boxList.size()];</span><br><span class="line">LinkedList&lt;String&gt; allFruitList = <span class="keyword">new</span> LinkedList&lt;String&gt;(); <span class="comment">// display all fruit choosed</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// final CheckBox cb;</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; boxList.size(); i++) &#123;</span><br><span class="line"><span class="comment">//            cbs[i] = boxList.poll();</span></span><br><span class="line">CheckBox cb = cbs[i] = <span class="keyword">new</span> CheckBox(boxList.get(i));</span><br><span class="line"></span><br><span class="line"><span class="comment">//            final CheckBox cb0 = new CheckBox("checkBox");</span></span><br><span class="line"><span class="comment">//            final CheckBox cb1 = new CheckBox("aa");</span></span><br><span class="line"></span><br><span class="line">cb.selectedProperty().addListener(<span class="keyword">new</span> ChangeListener&lt;Boolean&gt;() &#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">changed</span><span class="params">(ObservableValue&lt;? extends Boolean&gt; ov, Boolean old_val, Boolean new_val)</span> </span>&#123;</span><br><span class="line"><span class="comment">//            System.out.println(cb.isSelected());&#125;</span></span><br><span class="line"><span class="keyword">if</span> (new_val) &#123;</span><br><span class="line">allFruitList.offer(cb.getText());</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">allFruitList.remove(cb.getText());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">System.out.println(allFruitList);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">gp.add(cb, <span class="number">0</span>, i);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Button btn = <span class="keyword">new</span> Button();</span><br><span class="line">btn.setText(<span class="string">"Display the order!"</span>);</span><br><span class="line">btn.setOnAction(<span class="keyword">new</span> EventHandler&lt;ActionEvent&gt;() &#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handle</span><span class="params">(ActionEvent event)</span> </span>&#123;</span><br><span class="line">Group root = <span class="keyword">new</span> Group();</span><br><span class="line">Scene scene = <span class="keyword">new</span> Scene(root, <span class="number">300</span>, <span class="number">250</span>);</span><br><span class="line"><span class="comment">//Stage stg = new Stage();</span></span><br><span class="line"><span class="comment">//System.out.println((String)allFruitList.toString());</span></span><br><span class="line"><span class="comment">//Pattern pattern = Pattern.compile("'(\\D+)'");</span></span><br><span class="line"><span class="comment">//String i = (String)allFruitList.toString();</span></span><br><span class="line"><span class="comment">//Matcher m = pattern.matcher(i);</span></span><br><span class="line"><span class="comment">//if (m.find())&#123;</span></span><br><span class="line"><span class="comment">//Text text = new Text(100, 100, m.group(1));</span></span><br><span class="line"><span class="comment">//root.getChildren().add(text);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//String[] arr = allFruitList.toString().split("'");</span></span><br><span class="line">System.out.println();</span><br><span class="line">String orderString = <span class="keyword">new</span> String();</span><br><span class="line"><span class="keyword">for</span> (String s : allFruitList) &#123;</span><br><span class="line">orderString += s + <span class="string">"\n"</span>;</span><br><span class="line">&#125;</span><br><span class="line">Text text = <span class="keyword">new</span> Text(<span class="number">100</span>, <span class="number">100</span>, <span class="string">"final order:"</span> + <span class="string">"\n"</span> + orderString);</span><br><span class="line">root.getChildren().add(text);</span><br><span class="line">primaryStage.setScene(scene);</span><br><span class="line">primaryStage.show();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gp.add(btn, <span class="number">10</span>, <span class="number">0</span>); <span class="comment">// place the button</span></span><br><span class="line"></span><br><span class="line">scene.getStylesheets().add(getClass().getResource(<span class="string">"application.css"</span>).toExternalForm());</span><br><span class="line"></span><br><span class="line">primaryStage.setScene(scene);</span><br><span class="line">primaryStage.show();</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">launch(args);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 学校 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ds3h</title>
      <link href="/2019/04/09/ds3h/"/>
      <url>/2019/04/09/ds3h/</url>
      
        <content type="html"><![CDATA[<h1 id="2019-04-09-笔记"><a href="#2019-04-09-笔记" class="headerlink" title="2019-04-09 笔记"></a>2019-04-09 笔记</h1><a id="more"></a><p><br><br><div class="row">    <embed src="my_ds01_Introduction.pdf" width="100%" height="550" type="application/pdf"></div><br><br></p><h2 id="P16"><a href="#P16" class="headerlink" title="P16"></a>P16</h2><blockquote><p>What does a ds do?</p></blockquote><ul><li>share hardwares, software and data</li><li>let computers coordinate and synchronize</li><li>offer users an integrated computing facility not limited by location</li></ul><h2 id="P17"><a href="#P17" class="headerlink" title="P17"></a>P17</h2><blockquote><p>What is the essetial part?</p></blockquote><ul><li>auto scaling &amp; load balance</li><li>城市规划例子,when a computer is broken, it will be slower for the system implementation because of the boundary computation which counts on the coordinations one and another computers, so as for synchronization the system have to wait for the slowest computer, with heavier load than others, to process.</li></ul><h2 id="P18"><a href="#P18" class="headerlink" title="P18"></a>P18</h2><ul><li><p>(b) filters the redundant info and ensure the useful info procured to minimum.</p></li><li><p>(b) will have a higher speed of response.</p></li></ul><h2 id="P26"><a href="#P26" class="headerlink" title="P26"></a>P26</h2><blockquote><p>What is Mobility Transparency?</p></blockquote><ul><li>eg. Stream serialize deserialize</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 学校 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>eigen-everthing</title>
      <link href="/2019/04/08/eigen-everthing/"/>
      <url>/2019/04/08/eigen-everthing/</url>
      
        <content type="html"><![CDATA[<h2 id="brief-introduction-of-eigenvalue-and-eigenvector-in-linear-algebra"><a href="#brief-introduction-of-eigenvalue-and-eigenvector-in-linear-algebra" class="headerlink" title="brief introduction of eigenvalue and eigenvector in linear algebra"></a>brief introduction of eigenvalue and eigenvector in linear algebra</h2><a id="more"></a><p><img src="/2019/04/08/eigen-everthing/0.jpg" alt="0"></p><ul><li><p>determinant 行列式</p></li><li><p>eigenvalue特征值/eigenvector特征向量/eigenspace特征空间(all of the eigenvectors that correspond the eigrnvalue)</p></li><li><p>null space</p></li><li><p>nontrival</p></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Math </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ds2</title>
      <link href="/2019/04/05/ds2/"/>
      <url>/2019/04/05/ds2/</url>
      
        <content type="html"><![CDATA[<h1 id="2019-04-05-笔记"><a href="#2019-04-05-笔记" class="headerlink" title="2019-04-05 笔记"></a>2019-04-05 笔记</h1><a id="more"></a><p><br><br><div class="row">    <embed src="DistSys-2-2019.pdf" width="100%" height="550" type="application/pdf"></div><br><br></p><!-- name the pdf should not comprise space! --><ul><li>make every attribute private and Use getter and setter to access them </li></ul><h2 id="Communication-of-DS"><a href="#Communication-of-DS" class="headerlink" title="Communication of DS"></a>Communication of DS</h2><ul><li><p>synchronous: The sender may block activity until acknowledgement from receiver</p></li><li><p>big-endian大端法 small-endian小端法</p></li><li><p>ASCII, Unicode</p></li><li><p>external data representation and marshalling</p></li></ul><blockquote><p>alternative method</p></blockquote><h2 id="Streams"><a href="#Streams" class="headerlink" title="Streams"></a>Streams</h2><h3 id="note"><a href="#note" class="headerlink" title="note"></a>note</h3><ul><li>transforming in bytes and characters</li></ul><blockquote><p>encoded in unicode, must be 2 bytes not 1</p></blockquote><p>class Employee implements Serializable(In China)<br>-&gt; Seralization-&gt;deserialization-&gt;class Employee(In luebeck)</p><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><p>说明：建立一个Student类，把它用Stream的方式serialize再deserialize,<br>从而实现信息的传输。</p><p><img src="/2019/04/05/ds2/1.jpg" alt="1"></p><h4 id="定义Student类"><a href="#定义Student类" class="headerlink" title="定义Student类"></a>定义Student类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> studentNumber;</span><br><span class="line"><span class="keyword">private</span> String degreeCourse;</span><br><span class="line"></span><br><span class="line">Student(<span class="keyword">int</span> studentNumber, String degreeCourse) &#123;</span><br><span class="line"><span class="keyword">this</span>.studentNumber = studentNumber;</span><br><span class="line"><span class="keyword">this</span>.degreeCourse = degreeCourse;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"studentNumber:"</span> + studentNumber + <span class="string">" "</span> + <span class="string">"degreeCourse:"</span> + degreeCourse;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="serialize过程"><a href="#serialize过程" class="headerlink" title="serialize过程"></a>serialize过程</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestSerializing</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">FileOutputStream fos = <span class="keyword">new</span> FileOutputStream(<span class="string">"test"</span>);</span><br><span class="line">ObjectOutputStream oos = <span class="keyword">new</span> ObjectOutputStream(fos);</span><br><span class="line"></span><br><span class="line">Student chen = <span class="keyword">new</span> Student(<span class="number">12</span>, <span class="string">"ITB"</span>);</span><br><span class="line">oos.writeObject(chen);</span><br><span class="line">oos.close();</span><br><span class="line">fos.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="deserialize过程"><a href="#deserialize过程" class="headerlink" title="deserialize过程"></a>deserialize过程</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDeserialize</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException </span>&#123;</span><br><span class="line">FileInputStream fos = <span class="keyword">new</span> FileInputStream(<span class="string">"test"</span>);</span><br><span class="line">ObjectInputStream oos = <span class="keyword">new</span> ObjectInputStream(fos);</span><br><span class="line">Student aStudent = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">aStudent = (Student) oos.readObject();</span><br><span class="line">&#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">System.out.println(aStudent.toString());</span><br><span class="line">oos.close();</span><br><span class="line">fos.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h4><p>test文件中显示乱码，是serialize后的字符流<br>deserialize后通过自己定义的toString打印可以输出原来的信息</p><h4 id="疑难"><a href="#疑难" class="headerlink" title="疑难"></a>疑难</h4><ul><li>test文件建在项目文件夹而不是src文件夹下</li><li><blockquote><p>使用ObjectInputStream反序列化的时候，ObjeectInputStream会先读取文件中的serialVersionUID，然后与本地的class文件的serialVersionUID<br>进行对比，如果这两个id不一致，反序列则失败</p></blockquote></li></ul><p>因此在Student class中定义</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br></pre></td></tr></table></figure><p>即可</p><h4 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h4><p><a href="https://www.cnblogs.com/fnz0/p/5410856.html" target="_blank" rel="noopener">Source</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 学校 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Eclipse 高效代码</title>
      <link href="/2019/04/04/Eclipse%E7%AE%80%E6%B4%81%E4%BB%A3%E7%A0%81/"/>
      <url>/2019/04/04/Eclipse%E7%AE%80%E6%B4%81%E4%BB%A3%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<h1 id="Eclipse-use-amp-code-convention"><a href="#Eclipse-use-amp-code-convention" class="headerlink" title="Eclipse use &amp; code convention"></a>Eclipse use &amp; code convention</h1><a id="more"></a><h2 id="Eclipse-use"><a href="#Eclipse-use" class="headerlink" title="Eclipse use"></a>Eclipse use</h2><h3 id="项目导出压缩包"><a href="#项目导出压缩包" class="headerlink" title="项目导出压缩包"></a>项目导出压缩包</h3><p>File-&gt;Export-&gt;General-&gt;选择要压缩的类型</p><h3 id="修改缩进等格式-CTRL-SHIFT-F"><a href="#修改缩进等格式-CTRL-SHIFT-F" class="headerlink" title="修改缩进等格式(CTRL+SHIFT+F)"></a>修改缩进等格式(CTRL+SHIFT+F)</h3><p>选中代码-&gt;Source-&gt;Format</p><h3 id="添加javadoc注释（ALT-SHIFT-J"><a href="#添加javadoc注释（ALT-SHIFT-J" class="headerlink" title="添加javadoc注释（ALT+SHIFT+J)"></a>添加javadoc注释（ALT+SHIFT+J)</h3><p>选中元素-&gt;Source-&gt;Generate Element Comment</p><h3 id="改名-ALT-SHIFT-R"><a href="#改名-ALT-SHIFT-R" class="headerlink" title="改名(ALT+SHIFT+R)"></a>改名(ALT+SHIFT+R)</h3><p>选中需要改名的元素-&gt;右键Refactor-&gt;Rename<br>.将会修改文件中所有有这个名字的元素 </p><h3 id="生成javadoc"><a href="#生成javadoc" class="headerlink" title="生成javadoc"></a>生成javadoc</h3><h2 id="code-convention"><a href="#code-convention" class="headerlink" title="code convention"></a>code convention</h2><p><a href="https://www.oracle.com/technetwork/java/codeconventions-150003.pdf" target="_blank" rel="noopener">java code convention</a></p><blockquote><ul><li>Javadoc comment<blockquote><ul><li>Header/Classes</li><li>Functions</li></ul></blockquote></li><li>Name<blockquote><ul><li>Package: student</li><li>Class&amp;Inteface: Student</li><li>variable&amp;method: inputFileSize</li><li>constant:MAXWEIGHT</li></ul></blockquote></li><li>Layout/indentation</li><li>Space</li></ul></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> JAVA </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Information about application for master degree</title>
      <link href="/2019/03/19/Master/"/>
      <url>/2019/03/19/Master/</url>
      
        <content type="html"><![CDATA[<h1 id="德电160硕士申请"><a href="#德电160硕士申请" class="headerlink" title="德电160硕士申请"></a>德电160硕士申请</h1><a id="more"></a><h2 id="德国"><a href="#德国" class="headerlink" title="德国"></a>德国</h2><h3 id="信息表"><a href="#信息表" class="headerlink" title="信息表"></a>信息表</h3><table><thead><tr><th style="text-align:center">大学名</th><th style="text-align:center">相关专业名称</th><th style="text-align:center">地点</th><th style="text-align:center">绩点要求</th><th style="text-align:center">托福/GRE要求</th><th style="text-align:center">申请截止日期</th><th style="text-align:center">评价</th></tr></thead><tbody><tr><td style="text-align:center"><a href="(http://www.rwth-aachen.de/cms/root/Studium/Vor-dem-Studium/Zugangsvoraussetzungen/~ddxf/Zugangsvoraussetzungen-fuer-den-Master/lidx/1/">亚琛工业大学</a>)</td><td style="text-align:center"><a href="http://www.rwth-aachen.de/go/id/bowk?lidx=1#aaaaaaaaaaabowl" target="_blank" rel="noopener">Media Infomatics（多媒体信息）</a></td><td style="text-align:center">波恩&amp;亚琛</td><td style="text-align:center"></td><td style="text-align:center">托福90</td><td style="text-align:center">3.1</td><td style="text-align:center"></td></tr><tr><td style="text-align:center"></td><td style="text-align:center"><a href="http://www.rwth-aachen.de/go/id/bngt?lidx=1#aaaaaaaaaaabngu" target="_blank" rel="noopener">EE,IT,CE</a></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">托福90 GREverbal超过%15，quantitive超过%75</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"><a href="http://www.e-technik.tu-dortmund.de/cms1/de/Lehre_Studium/Studienangebot/Master_A_R/Master_A_R_en/Application_Bewerbung/index.html" target="_blank" rel="noopener">Dortmund 大学</a></td><td style="text-align:center">机器人自动化</td><td style="text-align:center">Dortmund</td><td style="text-align:center"></td><td style="text-align:center">80</td><td style="text-align:center">3.31</td><td style="text-align:center">机器人研究方面很强</td></tr><tr><td style="text-align:center">慕尼黑工业大学</td><td style="text-align:center">ECE</td><td style="text-align:center">慕尼黑</td><td style="text-align:center">3.5+</td><td style="text-align:center">88</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center">斯图加特大学</td><td style="text-align:center">infomation technology <a href="https://www.infotech.uni-stuttgart.de/application/index.html" target="_blank" rel="noopener">官网</a> <a href="https://www.daad.de/deutschland/studienangebote/international-programmes/en/detail/3677/" target="_blank" rel="noopener">DAAD网址</a></td><td style="text-align:center">Stuttgart</td><td style="text-align:center">70%ofbest-on-scale, e.g.70%/100%; 2.8/4; 2.5/1.0 (for German Marks)</td><td style="text-align:center">托福80</td><td style="text-align:center">2.15</td><td style="text-align:center">EU citizens do not pay tuition, whereas non-EU citizens pay a tuition of 1,500 EUR per semester.（有学费要求）</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">Computer Science <a href="https://www.informatik.uni-stuttgart.de/studium/interessierte/msc-studiengaenge/msc-computer-science/admission/index.html" target="_blank" rel="noopener">官网</a> <a href="https://www.daad.de/deutschland/studienangebote/international-programmes/en/detail/4439/#tab_overview" target="_blank" rel="noopener">DAAD网址</a></td><td style="text-align:center"></td><td style="text-align:center">无</td><td style="text-align:center">托福80</td><td style="text-align:center">2.15（winter semester） 6.15(summer semester)</td><td style="text-align:center">Bachelor’s degree with a programme duration of at least six semesters in computer science, software engineering, or in a closely related subject(专业匹配度可能较低)EU citizens do not pay tuition, whereas non-EU citizens pay a tuition of 1,500 EUR per semester.（有学费要求）</td></tr><tr><td style="text-align:center">Saarland University萨尔大学</td><td style="text-align:center">Saarbrücken Graduate School of Computer Science</td><td style="text-align:center">Saarbrücken</td><td style="text-align:center">75%以上</td><td style="text-align:center">推荐GRE，托福95/120</td><td style="text-align:center">11/15；根据专业</td><td style="text-align:center">不用学费，强在：马普所，视觉信息但毕业很难，挂科率极高</td></tr><tr><td style="text-align:center">Saarland University萨尔大学<a href="https://www.daad.de/deutschland/studienangebote/international-programmes/en/result/?q=Saarland&amp;degree%5B%5D=&amp;lang%5B%5D=2&amp;fos=&amp;crossFac=&amp;cert=&amp;admReq=&amp;scholarshipLC=&amp;scholarshipSC=&amp;langDeAvailable=&amp;langEnAvailable=&amp;lvlEn%5B%5D=&amp;cit%5B%5D=&amp;tyi%5B%5D=&amp;ins%5B%5D=&amp;fee=&amp;bgn%5B%5D=&amp;dur%5B%5D=&amp;sort=4&amp;subjects%5B%5D=&amp;limit=10&amp;offset=10&amp;display=list" target="_blank" rel="noopener">DAAD网址</a></td><td style="text-align:center">Visual Computing (MSc)</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center">Saarland University萨尔大学</td><td style="text-align:center">Embedded Systems (MSc)</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center">Saarland University萨尔大学</td><td style="text-align:center">Mathematics and Computer Science (MSc)</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center">Saarland University萨尔大学</td><td style="text-align:center">Computer Science (MSc)</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center">KIT</td><td style="text-align:center">EEM,FE,MPD,MSEM,POM,ISEM</td><td style="text-align:center">Karlsruhe</td><td style="text-align:center"></td><td style="text-align:center">托福90</td><td style="text-align:center">1/15</td><td style="text-align:center">30000欧</td></tr></tbody></table><h3 id="基本简介"><a href="#基本简介" class="headerlink" title="基本简介"></a>基本简介</h3><h4 id="学校概览"><a href="#学校概览" class="headerlink" title="学校概览"></a>学校概览</h4><p><img src="/2019/03/19/Master/德国学校.jpg" alt="0"></p><h4 id="11所精英大学"><a href="#11所精英大学" class="headerlink" title="11所精英大学"></a>11所精英大学</h4><blockquote><p>理工类3所（慕尼黑工业大学、德累斯顿工业大学、亚琛工业大学），文理类8所<br>（海德堡大学、 柏林自由大学、柏林洪堡大学、慕尼黑大学、图宾根大学、康斯坦茨大学、科隆大学、不莱梅大学）</p></blockquote><p><img src="/2019/03/19/Master/精英大学.png" alt="1"></p><blockquote><p>大学名称对应</p></blockquote><p><img src="/2019/03/19/Master/name.png" alt="2"></p><h4 id="TU9"><a href="#TU9" class="headerlink" title="TU9"></a>TU9</h4><blockquote><p>九所德国大学，包括亚琛工业大学RWTH Aachen, 柏林工业大学TU Berlin, 不伦瑞克工业大学TU Braunschweig, 达姆施达特工业大学TU Darmstadt,<br> 德累斯顿工业大学TU Dresden, 莱布尼茨-汉诺威大学Leibniz Universität Hannover,<br>  卡尔斯鲁厄理工学院Karlsruher Institut für Technologie, 慕尼黑工业大学TU München,<br>   斯图加特大学Universität Stuttgart。九所大学都是1900年之前成立的理工高校。<br>   TU9联盟主席Ernst Schmachtenberg博士教授指出，”TU9理工高校联盟就是科研实力的代名词。“</p></blockquote><h4 id="U15"><a href="#U15" class="headerlink" title="U15"></a>U15</h4><blockquote><p>U15大学联盟是德国的大型高校、研究型高校联盟，成立于2012年10月12日。联盟成立宗旨为改善德国科研和教育的架构。占德国高校总数13%的十五所高校，承担了37%的第三方资助、60%的医科资助、43%的博士授予，并获得了43%的莱布尼茨奖。目前联盟主席为海德堡大学校长爱特尔(Bernd Eitel)。<br>联盟成员,柏林自由大学,海德堡大学,柏林洪堡大学,波恩大学,法兰克福大学,弗莱堡大学,哥廷根大学,汉堡大学,科隆大学,莱比锡大学,美因茨大学,慕尼黑大学,明斯特大学,图宾根大学,维尔茨堡大学.</p></blockquote><h3 id="DAAD查找路径：https-www-daad-de-deutschland-studienangebote-international-programmes-en-result-crossFac-amp-cert-amp-admReq-amp-scholarshipLC-amp-scholarshipSC-amp-degree-5B-5D-amp-fos-amp-langDeAvailable-amp-langEnAvailable-amp-lang-5B-5D-amp-cit-5B-5D-amp-tyi-5B-5D-amp-ins-5B-5D-amp-dur-5B-5D-amp-sort-4-amp-subjects-5B-5D-amp-q-amp-limit-10-amp-offset-amp-display-list"><a href="#DAAD查找路径：https-www-daad-de-deutschland-studienangebote-international-programmes-en-result-crossFac-amp-cert-amp-admReq-amp-scholarshipLC-amp-scholarshipSC-amp-degree-5B-5D-amp-fos-amp-langDeAvailable-amp-langEnAvailable-amp-lang-5B-5D-amp-cit-5B-5D-amp-tyi-5B-5D-amp-ins-5B-5D-amp-dur-5B-5D-amp-sort-4-amp-subjects-5B-5D-amp-q-amp-limit-10-amp-offset-amp-display-list" class="headerlink" title="DAAD查找路径：https://www.daad.de/deutschland/studienangebote/international-programmes/en/result/?crossFac=&amp;cert=&amp;admReq=&amp;scholarshipLC=&amp;scholarshipSC=&amp;degree%5B%5D=&amp;fos=&amp;langDeAvailable=&amp;langEnAvailable=&amp;lang%5B%5D=&amp;cit%5B%5D=&amp;tyi%5B%5D=&amp;ins%5B%5D=&amp;dur%5B%5D=&amp;sort=4&amp;subjects%5B%5D=&amp;q=&amp;limit=10&amp;offset=&amp;display=list"></a>DAAD查找路径：<a href="https://www.daad.de/deutschland/studienangebote/international-programmes/en/result/?crossFac=&amp;cert=&amp;admReq=&amp;scholarshipLC=&amp;scholarshipSC=&amp;degree%5B%5D=&amp;fos=&amp;langDeAvailable=&amp;langEnAvailable=&amp;lang%5B%5D=&amp;cit%5B%5D=&amp;tyi%5B%5D=&amp;ins%5B%5D=&amp;dur%5B%5D=&amp;sort=4&amp;subjects%5B%5D=&amp;q=&amp;limit=10&amp;offset=&amp;display=list" target="_blank" rel="noopener">https://www.daad.de/deutschland/studienangebote/international-programmes/en/result/?crossFac=&amp;cert=&amp;admReq=&amp;scholarshipLC=&amp;scholarshipSC=&amp;degree%5B%5D=&amp;fos=&amp;langDeAvailable=&amp;langEnAvailable=&amp;lang%5B%5D=&amp;cit%5B%5D=&amp;tyi%5B%5D=&amp;ins%5B%5D=&amp;dur%5B%5D=&amp;sort=4&amp;subjects%5B%5D=&amp;q=&amp;limit=10&amp;offset=&amp;display=list</a></h3>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>少年的诗</title>
      <link href="/2018/12/13/%E5%B0%91%E5%B9%B4%E7%9A%84%E8%AF%97/"/>
      <url>/2018/12/13/%E5%B0%91%E5%B9%B4%E7%9A%84%E8%AF%97/</url>
      
        <content type="html"><![CDATA[<blockquote><center>三峡江声流笔底, 六朝帆影落樽前<br><center>胸中机杼，笔底波澜<br><center>写一点诗，总是好的</center></center></center></blockquote><a id="more"></a><h1 id="《侠的诗》"><a href="#《侠的诗》" class="headerlink" title=" 《侠的诗》 "></a><center> 《侠的诗》 </center></h1><center>“傲指弹云分入酒，青冠流古照秋霜”<center>太平无侠士<center>那就写一点诗<center>放浪侠气</center><h2 id="「侠」"><a href="#「侠」" class="headerlink" title=" 「侠」"></a><center> 「侠」</center></h2><center>辞京飘迹楚山茫，</center><br><center>谑眼穿尘淡冕光。</center><br><center>傲指弹云分入酒，</center><br><center>青冠流古照秋霜。</center><h1 id="《少年游》"><a href="#《少年游》" class="headerlink" title=" 《少年游》 "></a><center> 《少年游》 </center></h1><center>“花有重开日，人无再少年”<center>最好的时光<center>总是少年时<center>那走遍的江河</center><h2 id="「入山」"><a href="#「入山」" class="headerlink" title=" 「入山」"></a><center> 「入山」</center></h2><center>山深纵马伫难前，</center><br><center>步下飞光百丈渊。</center><br><center>雾卷云廊封道尽，</center><br><center>雨开峰骨作桥源。</center><br><center>悠笛风远惊人迹，</center><br><center>长海际回忆陌年。</center><br><center>绝处寻松掬水月，</center><br><center>春秋一脉本多缘。</center><h2 id="「古原雨」"><a href="#「古原雨」" class="headerlink" title=" 「古原雨」"></a><center> 「古原雨」</center></h2><center>故迹青鸦驻，三江入古原。</center><br><center>立堤涛水逝，临野聚峰眠。</center><br><center>塔外清魂雨，烟间断梦田。</center><br><center>萧霜凋旧木，归马闭门前。</center><h2 id="「题赛里木湖」"><a href="#「题赛里木湖」" class="headerlink" title=" 「题赛里木湖」"></a><center> 「题赛里木湖」</center></h2><center>深云压海境，微雨落晶珠。</center><br><center>几骑寻闲客，风波自在途。</center><h1 id="《韵之心》"><a href="#《韵之心》" class="headerlink" title=" 《韵之心》 "></a><center> 《韵之心》 </center></h1><center>古有琴谱阳关三叠<br><center>“劝君更进一杯酒，西出阳关无故人”<br><center>古有诗歌驻马衔杯<br><center>“圣代即今多雨露，暂时分手莫踌躇”</center><h2 id="「缘深缘浅，留念诸君」"><a href="#「缘深缘浅，留念诸君」" class="headerlink" title=" 「缘深缘浅，留念诸君」"></a><center> 「缘深缘浅，留念诸君」</center></h2><center>何泣春江归晚照？松风水落对槐花。</center><br><center>遗朝柳折留寻念，此坊歌倾续梦茶。</center><br><center>解带吹心风作客，流光转忆泪分霞。</center><br><center>云终不见诸君影，碧海行帆懒问涯。</center><h2 id="「岳麓•祭•忆君之风忆水长」"><a href="#「岳麓•祭•忆君之风忆水长」" class="headerlink" title=" 「岳麓•祭•忆君之风忆水长」 "></a><center> 「岳麓•祭•忆君之风忆水长」 </center></h2><center>望尽湘江暮，亭间墨客愁。</center><br><center>满林兼叶落，独木与谁谋！</center><br><center>老雁飞斜镜，青衫立冷丘。</center><br><center>出钩疑钓叟，惟是月如舟。</center><h1 id="《家国情》"><a href="#《家国情》" class="headerlink" title=" 《家国情》 "></a><center> 《家国情》 </center></h1><center>“王师北定中原日”<center>太平年间<center>曾经的荣辱仿佛被渐渐淡化了<center>而那血脉奔腾的黄河长江<center>却依然肃穆</center><h2 id="「记南京大屠杀」"><a href="#「记南京大屠杀」" class="headerlink" title=" 「记南京大屠杀」 "></a><center> 「记南京大屠杀」 </center></h2><center>寇兵侵戮昔悲史，</center><br><center>瑟瑟汗青警自鸣。</center><br><center>国父陵前国尽复，</center><br><center>雨花台上雨堪惊！</center><br><center>三江拾恨祭英骨，</center><br><center>亿气同途筑远程。</center><br><center>勿任危心流海去，</center><br><center>涯间舟载惜天明。</center></center></center></center></center></center></center></center></center></center></center></center></center></center>]]></content>
      
      
      
    </entry>
    
  
  
</search>
