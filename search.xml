<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>ds2</title>
      <link href="/2019/04/05/ds2/"/>
      <url>/2019/04/05/ds2/</url>
      
        <content type="html"><![CDATA[<h1 id="2019-04-05-笔记"><a href="#2019-04-05-笔记" class="headerlink" title="2019-04-05 笔记"></a>2019-04-05 笔记</h1><a id="more"></a><ul><li>make every attribute private and Use getter and setter to access them </li></ul><h2 id="Communication-of-DS"><a href="#Communication-of-DS" class="headerlink" title="Communication of DS"></a>Communication of DS</h2><ul><li><p>synchronous: The sender may block activity until acknowledgement from receiver</p></li><li><p>big-endian大端法 small-endian小端法</p></li><li><p>ASCII, Unicode</p></li><li><p>external data representation and marshalling</p></li></ul><blockquote><p>alternative method</p></blockquote><h2 id="Streams"><a href="#Streams" class="headerlink" title="Streams"></a>Streams</h2><h3 id="note"><a href="#note" class="headerlink" title="note"></a>note</h3><ul><li>transforming in bytes and characters</li></ul><blockquote><p>encoded in unicode, must be 2 bytes not 1</p></blockquote><p>class Employee implements Serializable(In China)<br>-&gt; Seralization-&gt;deserialization-&gt;class Employee(In luebeck)</p><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><p>说明：建立一个Student类，把它用Stream的方式serialize再deserialize,<br>从而实现信息的传输。</p><p><img src="/2019/04/05/ds2/1.jpg" alt="1"></p><h4 id="定义Student类"><a href="#定义Student类" class="headerlink" title="定义Student类"></a>定义Student类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> studentNumber;</span><br><span class="line"><span class="keyword">private</span> String degreeCourse;</span><br><span class="line"></span><br><span class="line">Student(<span class="keyword">int</span> studentNumber, String degreeCourse) &#123;</span><br><span class="line"><span class="keyword">this</span>.studentNumber = studentNumber;</span><br><span class="line"><span class="keyword">this</span>.degreeCourse = degreeCourse;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"studentNumber:"</span> + studentNumber + <span class="string">" "</span> + <span class="string">"degreeCourse:"</span> + degreeCourse;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="serialize过程"><a href="#serialize过程" class="headerlink" title="serialize过程"></a>serialize过程</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestSerializing</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">FileOutputStream fos = <span class="keyword">new</span> FileOutputStream(<span class="string">"test"</span>);</span><br><span class="line">ObjectOutputStream oos = <span class="keyword">new</span> ObjectOutputStream(fos);</span><br><span class="line"></span><br><span class="line">Student chen = <span class="keyword">new</span> Student(<span class="number">12</span>, <span class="string">"ITB"</span>);</span><br><span class="line">oos.writeObject(chen);</span><br><span class="line">oos.close();</span><br><span class="line">fos.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="deserialize过程"><a href="#deserialize过程" class="headerlink" title="deserialize过程"></a>deserialize过程</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDeserialize</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException </span>&#123;</span><br><span class="line">FileInputStream fos = <span class="keyword">new</span> FileInputStream(<span class="string">"test"</span>);</span><br><span class="line">ObjectInputStream oos = <span class="keyword">new</span> ObjectInputStream(fos);</span><br><span class="line">Student aStudent = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">aStudent = (Student) oos.readObject();</span><br><span class="line">&#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">System.out.println(aStudent.toString());</span><br><span class="line">oos.close();</span><br><span class="line">fos.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h4><p>test文件中显示乱码，是serialize后的字符流<br>deserialize后通过自己定义的toString打印可以输出原来的信息</p><h4 id="疑难"><a href="#疑难" class="headerlink" title="疑难"></a>疑难</h4><ul><li>test文件建在项目文件夹而不是src文件夹下</li><li><blockquote><p>使用ObjectInputStream反序列化的时候，ObjeectInputStream会先读取文件中的serialVersionUID，然后与本地的class文件的serialVersionUID<br>进行对比，如果这两个id不一致，反序列则失败</p></blockquote></li></ul><p>因此在Student class中定义</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br></pre></td></tr></table></figure><p>即可</p><h4 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h4><p><a href="https://www.cnblogs.com/fnz0/p/5410856.html" target="_blank" rel="noopener">Source</a></p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>Eclipse 高效代码</title>
      <link href="/2019/04/04/Eclipse%E7%AE%80%E6%B4%81%E4%BB%A3%E7%A0%81/"/>
      <url>/2019/04/04/Eclipse%E7%AE%80%E6%B4%81%E4%BB%A3%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<h1 id="Eclipse-use-amp-code-convention"><a href="#Eclipse-use-amp-code-convention" class="headerlink" title="Eclipse use &amp; code convention"></a>Eclipse use &amp; code convention</h1><a id="more"></a><h2 id="Eclipse-use"><a href="#Eclipse-use" class="headerlink" title="Eclipse use"></a>Eclipse use</h2><h3 id="项目导出压缩包"><a href="#项目导出压缩包" class="headerlink" title="项目导出压缩包"></a>项目导出压缩包</h3><p>File-&gt;Export-&gt;General-&gt;选择要压缩的类型</p><h3 id="修改缩进等格式"><a href="#修改缩进等格式" class="headerlink" title="修改缩进等格式"></a>修改缩进等格式</h3><p>选中代码-&gt;Source-&gt;Format</p><h3 id="添加javadoc注释"><a href="#添加javadoc注释" class="headerlink" title="添加javadoc注释"></a>添加javadoc注释</h3><p>选中元素-&gt;Source-&gt;Generate Element Comment</p><h3 id="改名"><a href="#改名" class="headerlink" title="改名"></a>改名</h3><p>选中需要改名的元素-&gt;右键Refactor-&gt;Rename<br>.将会修改文件中所有有这个名字的元素 </p><h3 id="生成javadoc"><a href="#生成javadoc" class="headerlink" title="生成javadoc"></a>生成javadoc</h3><h2 id="code-convention"><a href="#code-convention" class="headerlink" title="code convention"></a>code convention</h2><p><a href="https://www.oracle.com/technetwork/java/codeconventions-150003.pdf" target="_blank" rel="noopener">java code convention</a></p><blockquote><ul><li>Javadoc comment<blockquote><ul><li>Header/Classes</li><li>Functions</li></ul></blockquote></li><li>Name<blockquote><ul><li>Package: student</li><li>Class&amp;Inteface: Student</li><li>variable&amp;method: inputFileSize</li><li>constant:MAXWEIGHT</li></ul></blockquote></li><li>Layout/indentation</li><li>Space</li></ul></blockquote>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>Information about application for master degree</title>
      <link href="/2018/12/13/Master/"/>
      <url>/2018/12/13/Master/</url>
      
        <content type="html"><![CDATA[<h1 id="德电160硕士申请"><a href="#德电160硕士申请" class="headerlink" title="德电160硕士申请"></a>德电160硕士申请</h1><a id="more"></a><h2 id="德国"><a href="#德国" class="headerlink" title="德国"></a>德国</h2><h3 id="基本简介"><a href="#基本简介" class="headerlink" title="基本简介"></a>基本简介</h3><h4 id="学校概览"><a href="#学校概览" class="headerlink" title="学校概览"></a>学校概览</h4><p><img src="/2018/12/13/Master/德国学校.jpg" alt="0"></p><h4 id="11所精英大学"><a href="#11所精英大学" class="headerlink" title="11所精英大学"></a>11所精英大学</h4><blockquote><p>理工类3所（慕尼黑工业大学、德累斯顿工业大学、亚琛工业大学），文理类8所<br>（海德堡大学、 柏林自由大学、柏林洪堡大学、慕尼黑大学、图宾根大学、康斯坦茨大学、科隆大学、不莱梅大学）</p></blockquote><p><img src="/2018/12/13/Master/精英大学.png" alt="1"></p><blockquote><p>大学名称对应</p></blockquote><p><img src="/2018/12/13/Master/name.png" alt="2"></p><h4 id="TU9"><a href="#TU9" class="headerlink" title="TU9"></a>TU9</h4><blockquote><p>九所德国大学，包括亚琛工业大学RWTH Aachen, 柏林工业大学TU Berlin, 不伦瑞克工业大学TU Braunschweig, 达姆施达特工业大学TU Darmstadt,<br> 德累斯顿工业大学TU Dresden, 莱布尼茨-汉诺威大学Leibniz Universität Hannover,<br>  卡尔斯鲁厄理工学院Karlsruher Institut für Technologie, 慕尼黑工业大学TU München,<br>   斯图加特大学Universität Stuttgart。九所大学都是1900年之前成立的理工高校。<br>   TU9联盟主席Ernst Schmachtenberg博士教授指出，”TU9理工高校联盟就是科研实力的代名词。“</p></blockquote><h4 id="U15"><a href="#U15" class="headerlink" title="U15"></a>U15</h4><blockquote><p>U15大学联盟是德国的大型高校、研究型高校联盟，成立于2012年10月12日。联盟成立宗旨为改善德国科研和教育的架构。占德国高校总数13%的十五所高校，承担了37%的第三方资助、60%的医科资助、43%的博士授予，并获得了43%的莱布尼茨奖。目前联盟主席为海德堡大学校长爱特尔(Bernd Eitel)。<br>联盟成员,柏林自由大学,海德堡大学,柏林洪堡大学,波恩大学,法兰克福大学,弗莱堡大学,哥廷根大学,汉堡大学,科隆大学,莱比锡大学,美因茨大学,慕尼黑大学,明斯特大学,图宾根大学,维尔茨堡大学.</p></blockquote><h3 id="信息表"><a href="#信息表" class="headerlink" title="信息表"></a>信息表</h3><table><thead><tr><th style="text-align:center">大学名</th><th style="text-align:center">相关专业名称</th><th style="text-align:center">地点</th><th style="text-align:center">绩点要求</th><th style="text-align:center">托福/GRE要求</th><th style="text-align:center">申请截止日期</th><th style="text-align:center">评价</th></tr></thead><tbody><tr><td style="text-align:center"><a href="(http://www.rwth-aachen.de/cms/root/Studium/Vor-dem-Studium/Zugangsvoraussetzungen/~ddxf/Zugangsvoraussetzungen-fuer-den-Master/lidx/1/">亚琛工业大学</a>)</td><td style="text-align:center"><a href="http://www.rwth-aachen.de/go/id/bowk?lidx=1#aaaaaaaaaaabowl" target="_blank" rel="noopener">Media Infomatics（多媒体信息）</a></td><td style="text-align:center">波恩&amp;亚琛</td><td style="text-align:center"></td><td style="text-align:center">90</td><td style="text-align:center">3.1</td><td style="text-align:center"></td></tr><tr><td style="text-align:center"></td><td style="text-align:center"><a href="http://www.rwth-aachen.de/go/id/bngt?lidx=1#aaaaaaaaaaabngu" target="_blank" rel="noopener">EE,IT,CE</a></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">90/verbal超过%15，quantitive超过%75</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"><a href="http://www.e-technik.tu-dortmund.de/cms1/de/Lehre_Studium/Studienangebot/Master_A_R/Master_A_R_en/Application_Bewerbung/index.html" target="_blank" rel="noopener">Dortmund 大学</a></td><td style="text-align:center">机器人自动化</td><td style="text-align:center">Dortmund</td><td style="text-align:center"></td><td style="text-align:center">80</td><td style="text-align:center">3.31</td><td style="text-align:center">机器人研究方面很强</td></tr><tr><td style="text-align:center">慕尼黑工业大学</td><td style="text-align:center">ECE</td><td style="text-align:center">慕尼黑</td><td style="text-align:center">3.5+</td><td style="text-align:center">88</td><td style="text-align:center"></td><td style="text-align:center"></td></tr></tbody></table>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>少年的诗</title>
      <link href="/2018/12/13/%E5%B0%91%E5%B9%B4%E7%9A%84%E8%AF%97/"/>
      <url>/2018/12/13/%E5%B0%91%E5%B9%B4%E7%9A%84%E8%AF%97/</url>
      
        <content type="html"><![CDATA[<blockquote><center>三峡江声流笔底, 六朝帆影落樽前<br><center>胸中机杼，笔底波澜<br><center>写一点诗，总是好的</center></center></center></blockquote><a id="more"></a><h1 id="《侠的诗》"><a href="#《侠的诗》" class="headerlink" title=" 《侠的诗》 "></a><center> 《侠的诗》 </center></h1><center>“傲指弹云分入酒，青冠流古照秋霜”<center>太平无侠士<center>那就写一点诗<center>放浪侠气</center><h2 id="「侠」"><a href="#「侠」" class="headerlink" title=" 「侠」"></a><center> 「侠」</center></h2><center>辞京飘迹楚山茫，</center><br><center>谑眼穿尘淡冕光。</center><br><center>傲指弹云分入酒，</center><br><center>青冠流古照秋霜。</center><h1 id="《少年游》"><a href="#《少年游》" class="headerlink" title=" 《少年游》 "></a><center> 《少年游》 </center></h1><center>“花有重开日，人无再少年”<center>最好的时光<center>总是少年时<center>那走遍的江河</center><h2 id="「入山」"><a href="#「入山」" class="headerlink" title=" 「入山」"></a><center> 「入山」</center></h2><center>山深纵马伫难前，</center><br><center>步下飞光百丈渊。</center><br><center>雾卷云廊封道尽，</center><br><center>雨开峰骨作桥源。</center><br><center>悠笛风远惊人迹，</center><br><center>长海际回忆陌年。</center><br><center>绝处寻松掬水月，</center><br><center>春秋一脉本多缘。</center><h2 id="「古原雨」"><a href="#「古原雨」" class="headerlink" title=" 「古原雨」"></a><center> 「古原雨」</center></h2><center>故迹青鸦驻，三江入古原。</center><br><center>立堤涛水逝，临野聚峰眠。</center><br><center>塔外清魂雨，烟间断梦田。</center><br><center>萧霜凋旧木，归马闭门前。</center><h2 id="「题赛里木湖」"><a href="#「题赛里木湖」" class="headerlink" title=" 「题赛里木湖」"></a><center> 「题赛里木湖」</center></h2><center>深云压海境，微雨落晶珠。</center><br><center>几骑寻闲客，风波自在途。</center><h1 id="《韵之心》"><a href="#《韵之心》" class="headerlink" title=" 《韵之心》 "></a><center> 《韵之心》 </center></h1><center>古有琴谱阳关三叠<br><center>“劝君更进一杯酒，西出阳关无故人”<br><center>古有诗歌驻马衔杯<br><center>“圣代即今多雨露，暂时分手莫踌躇”</center><h2 id="「缘深缘浅，留念诸君」"><a href="#「缘深缘浅，留念诸君」" class="headerlink" title=" 「缘深缘浅，留念诸君」"></a><center> 「缘深缘浅，留念诸君」</center></h2><center>何泣春江归晚照？松风水落对槐花。</center><br><center>遗朝柳折留寻念，此坊歌倾续梦茶。</center><br><center>解带吹心风作客，流光转忆泪分霞。</center><br><center>云终不见诸君影，碧海行帆懒问涯。</center><h2 id="「岳麓•祭•忆君之风忆水长」"><a href="#「岳麓•祭•忆君之风忆水长」" class="headerlink" title=" 「岳麓•祭•忆君之风忆水长」 "></a><center> 「岳麓•祭•忆君之风忆水长」 </center></h2><center>望尽湘江暮，亭间墨客愁。</center><br><center>满林兼叶落，独木与谁谋！</center><br><center>老雁飞斜镜，青衫立冷丘。</center><br><center>出钩疑钓叟，惟是月如舟。</center><h1 id="《家国情》"><a href="#《家国情》" class="headerlink" title=" 《家国情》 "></a><center> 《家国情》 </center></h1><center>“王师北定中原日”<center>太平年间<center>曾经的荣辱仿佛被渐渐淡化了<center>而那血脉奔腾的黄河长江<center>却依然肃穆</center><h2 id="「记南京大屠杀」"><a href="#「记南京大屠杀」" class="headerlink" title=" 「记南京大屠杀」 "></a><center> 「记南京大屠杀」 </center></h2><center>寇兵侵戮昔悲史，</center><br><center>瑟瑟汗青警自鸣。</center><br><center>国父陵前国尽复，</center><br><center>雨花台上雨堪惊！</center><br><center>三江拾恨祭英骨，</center><br><center>亿气同途筑远程。</center><br><center>勿任危心流海去，</center><br><center>涯间舟载惜天明。</center></center></center></center></center></center></center></center></center></center></center></center></center></center>]]></content>
      
      
      
    </entry>
    
  
  
</search>
